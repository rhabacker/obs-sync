#!/bin/sh
#
# sync mingw packages from obs to a remote site
#
# SPDX-FileCopyrightText: 2022 Ralf Habacker <ralf.habacker@freenet.de>
# SPDX-License-Identifier: MIT
#


r=$(realpath $0)
r=$(dirname $r)
r=$(dirname $r)
bn=$(basename $0)


# Make sure the temp directory gets removed on script exit.
trap "exit 1"           HUP INT PIPE QUIT TERM
trap 'if test $clean -eq 1; then rm -rf "$TEMPD"; fi'  EXIT

run=
pushrun=
clean=1

for arg in "$@"
do
    case "$arg" in
        --dry-run)
            run=echo
            shift
            ;;
        --no-clean)
            clean=0
            shift
            ;;
        --no-push)
            pushrun=echo
            shift
            ;;
    esac
done

if test -n "$1"; then
    confs=$1
else
    confs=$(find $r/conf/*.conf)
fi

# Create a temporary directory and store its name in a variable.
TEMPD=$(mktemp -d)

# Exit if the temp directory wasn't created successfully.
if [ ! -e "$TEMPD" ]; then
    >&2 echo "Failed to create temp directory"
    exit 1
fi

cd $TEMPD

for i in $confs; do
    . $i
    # clean dir
    rm -rf *
    # set options
    mkdir -p .$path
    # create readme
    echo "Packages in this directory are generated from the following OBS projects:" >.$path/README.md
    echo "" >> .$path/README.md
    # loop over all packages
    for i in $packages; do
        project=$(echo $i | sed 's,/.*$,,g')
        package=$(echo $i | sed 's,^.*/,,g')
        # add obs package link to readme
        echo "- [$project/$package](https://build.opensuse.org/package/show/$project/$package)" >>.$path/README.md
        # fetch packages
        $run osc --quiet getbinaries -d $(pwd) $project $package $repo x86_64
        if test $? -ne 0; then
            exit 1
        fi
    done
    # add footer to readme
    echo "" >> .$path/README.md
    echo "You can use [7-Zip](https://www.7-zip.de) to unpack *.7z files." >> .$path/README.md
    echo "" >> .$path/README.md
    echo "The minimum supported operating system version for these binary packages is Windows 8 (Vista). They are known not to work on Windows 7." >> .$path/README.md
    # unpack
    for i in $(find $(pwd) -name '*.rpm'); do
        (cd .$path; $run rpm2cpio $i |  cpio -idmv)
    done
    # upload
    if test "$rsync" -eq 1; then
        # upload packages
        $pushrun rsync -av --delete-after -e ssh .$package_path $user@$host:$(dirname $package_path)
    else
        # upload packages
        $pushrun scp .$package_path/*.exe .$package_path/*.7z $user@$host:$package_path
    fi
done
